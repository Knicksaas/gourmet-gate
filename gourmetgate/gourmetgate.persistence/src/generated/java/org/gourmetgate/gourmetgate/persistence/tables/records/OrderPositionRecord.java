/*
 * This file is generated by jOOQ.
 */
package org.gourmetgate.gourmetgate.persistence.tables.records;


import java.math.BigDecimal;

import org.gourmetgate.gourmetgate.persistence.tables.OrderPosition;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class OrderPositionRecord extends UpdatableRecordImpl<OrderPositionRecord> implements Record5<String, String, String, Double, BigDecimal> {

  private static final long serialVersionUID = 1L;

  /**
   * Setter for <code>Schema.ORDER_POSITION.ORDER_POSITION_ID</code>.
   */
  public void setOrderPositionId(String value) {
    set(0, value);
  }

  /**
   * Getter for <code>Schema.ORDER_POSITION.ORDER_POSITION_ID</code>.
   */
  public String getOrderPositionId() {
    return (String) get(0);
  }

  /**
   * Setter for <code>Schema.ORDER_POSITION.ORDER_ID</code>.
   */
  public void setOrderId(String value) {
    set(1, value);
  }

  /**
   * Getter for <code>Schema.ORDER_POSITION.ORDER_ID</code>.
   */
  public String getOrderId() {
    return (String) get(1);
  }

  /**
   * Setter for <code>Schema.ORDER_POSITION.ARTICLE_ID</code>.
   */
  public void setArticleId(String value) {
    set(2, value);
  }

  /**
   * Getter for <code>Schema.ORDER_POSITION.ARTICLE_ID</code>.
   */
  public String getArticleId() {
    return (String) get(2);
  }

  /**
   * Setter for <code>Schema.ORDER_POSITION.VAT</code>.
   */
  public void setVat(Double value) {
    set(3, value);
  }

  /**
   * Getter for <code>Schema.ORDER_POSITION.VAT</code>.
   */
  public Double getVat() {
    return (Double) get(3);
  }

  /**
   * Setter for <code>Schema.ORDER_POSITION.PRICE</code>.
   */
  public void setPrice(BigDecimal value) {
    set(4, value);
  }

  /**
   * Getter for <code>Schema.ORDER_POSITION.PRICE</code>.
   */
  public BigDecimal getPrice() {
    return (BigDecimal) get(4);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<String> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record5 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row5<String, String, String, Double, BigDecimal> fieldsRow() {
    return (Row5) super.fieldsRow();
  }

  @Override
  public Row5<String, String, String, Double, BigDecimal> valuesRow() {
    return (Row5) super.valuesRow();
  }

  @Override
  public Field<String> field1() {
    return OrderPosition.ORDER_POSITION.ORDER_POSITION_ID;
  }

  @Override
  public Field<String> field2() {
    return OrderPosition.ORDER_POSITION.ORDER_ID;
  }

  @Override
  public Field<String> field3() {
    return OrderPosition.ORDER_POSITION.ARTICLE_ID;
  }

  @Override
  public Field<Double> field4() {
    return OrderPosition.ORDER_POSITION.VAT;
  }

  @Override
  public Field<BigDecimal> field5() {
    return OrderPosition.ORDER_POSITION.PRICE;
  }

  @Override
  public String component1() {
    return getOrderPositionId();
  }

  @Override
  public String component2() {
    return getOrderId();
  }

  @Override
  public String component3() {
    return getArticleId();
  }

  @Override
  public Double component4() {
    return getVat();
  }

  @Override
  public BigDecimal component5() {
    return getPrice();
  }

  @Override
  public String value1() {
    return getOrderPositionId();
  }

  @Override
  public String value2() {
    return getOrderId();
  }

  @Override
  public String value3() {
    return getArticleId();
  }

  @Override
  public Double value4() {
    return getVat();
  }

  @Override
  public BigDecimal value5() {
    return getPrice();
  }

  @Override
  public OrderPositionRecord value1(String value) {
    setOrderPositionId(value);
    return this;
  }

  @Override
  public OrderPositionRecord value2(String value) {
    setOrderId(value);
    return this;
  }

  @Override
  public OrderPositionRecord value3(String value) {
    setArticleId(value);
    return this;
  }

  @Override
  public OrderPositionRecord value4(Double value) {
    setVat(value);
    return this;
  }

  @Override
  public OrderPositionRecord value5(BigDecimal value) {
    setPrice(value);
    return this;
  }

  @Override
  public OrderPositionRecord values(String value1, String value2, String value3, Double value4, BigDecimal value5) {
    value1(value1);
    value2(value2);
    value3(value3);
    value4(value4);
    value5(value5);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached OrderPositionRecord
   */
  public OrderPositionRecord() {
    super(OrderPosition.ORDER_POSITION);
  }

  /**
   * Create a detached, initialised OrderPositionRecord
   */
  public OrderPositionRecord(String orderPositionId, String orderId, String articleId, Double vat, BigDecimal price) {
    super(OrderPosition.ORDER_POSITION);

    setOrderPositionId(orderPositionId);
    setOrderId(orderId);
    setArticleId(articleId);
    setVat(vat);
    setPrice(price);
  }
}
