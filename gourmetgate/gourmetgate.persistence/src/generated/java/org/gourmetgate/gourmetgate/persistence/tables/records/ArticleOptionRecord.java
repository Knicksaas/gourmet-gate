/*
 * This file is generated by jOOQ.
 */
package org.gourmetgate.gourmetgate.persistence.tables.records;


import org.gourmetgate.gourmetgate.persistence.tables.ArticleOption;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class ArticleOptionRecord extends UpdatableRecordImpl<ArticleOptionRecord> implements Record3<String, String, String> {

  private static final long serialVersionUID = 1L;

  /**
   * Setter for <code>Schema.ARTICLE_OPTION.ARTICLE_OPTION_ID</code>.
   */
  public void setArticleOptionId(String value) {
    set(0, value);
  }

  /**
   * Getter for <code>Schema.ARTICLE_OPTION.ARTICLE_OPTION_ID</code>.
   */
  public String getArticleOptionId() {
    return (String) get(0);
  }

  /**
   * Setter for <code>Schema.ARTICLE_OPTION.ARTICLE_ID</code>.
   */
  public void setArticleId(String value) {
    set(1, value);
  }

  /**
   * Getter for <code>Schema.ARTICLE_OPTION.ARTICLE_ID</code>.
   */
  public String getArticleId() {
    return (String) get(1);
  }

  /**
   * Setter for <code>Schema.ARTICLE_OPTION.DESCRIPTION</code>.
   */
  public void setDescription(String value) {
    set(2, value);
  }

  /**
   * Getter for <code>Schema.ARTICLE_OPTION.DESCRIPTION</code>.
   */
  public String getDescription() {
    return (String) get(2);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<String> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record3 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row3<String, String, String> fieldsRow() {
    return (Row3) super.fieldsRow();
  }

  @Override
  public Row3<String, String, String> valuesRow() {
    return (Row3) super.valuesRow();
  }

  @Override
  public Field<String> field1() {
    return ArticleOption.ARTICLE_OPTION.ARTICLE_OPTION_ID;
  }

  @Override
  public Field<String> field2() {
    return ArticleOption.ARTICLE_OPTION.ARTICLE_ID;
  }

  @Override
  public Field<String> field3() {
    return ArticleOption.ARTICLE_OPTION.DESCRIPTION;
  }

  @Override
  public String component1() {
    return getArticleOptionId();
  }

  @Override
  public String component2() {
    return getArticleId();
  }

  @Override
  public String component3() {
    return getDescription();
  }

  @Override
  public String value1() {
    return getArticleOptionId();
  }

  @Override
  public String value2() {
    return getArticleId();
  }

  @Override
  public String value3() {
    return getDescription();
  }

  @Override
  public ArticleOptionRecord value1(String value) {
    setArticleOptionId(value);
    return this;
  }

  @Override
  public ArticleOptionRecord value2(String value) {
    setArticleId(value);
    return this;
  }

  @Override
  public ArticleOptionRecord value3(String value) {
    setDescription(value);
    return this;
  }

  @Override
  public ArticleOptionRecord values(String value1, String value2, String value3) {
    value1(value1);
    value2(value2);
    value3(value3);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached ArticleOptionRecord
   */
  public ArticleOptionRecord() {
    super(ArticleOption.ARTICLE_OPTION);
  }

  /**
   * Create a detached, initialised ArticleOptionRecord
   */
  public ArticleOptionRecord(String articleOptionId, String articleId, String description) {
    super(ArticleOption.ARTICLE_OPTION);

    setArticleOptionId(articleOptionId);
    setArticleId(articleId);
    setDescription(description);
  }
}
