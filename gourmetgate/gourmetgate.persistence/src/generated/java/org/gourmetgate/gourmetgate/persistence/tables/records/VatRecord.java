/*
 * This file is generated by jOOQ.
 */
package org.gourmetgate.gourmetgate.persistence.tables.records;


import org.gourmetgate.gourmetgate.persistence.tables.Vat;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class VatRecord extends UpdatableRecordImpl<VatRecord> implements Record2<String, Double> {

  private static final long serialVersionUID = 1L;

  /**
   * Setter for <code>Schema.VAT.VAT_ID</code>.
   */
  public void setVatId(String value) {
    set(0, value);
  }

  /**
   * Getter for <code>Schema.VAT.VAT_ID</code>.
   */
  public String getVatId() {
    return (String) get(0);
  }

  /**
   * Setter for <code>Schema.VAT.PERCENT</code>.
   */
  public void setPercent(Double value) {
    set(1, value);
  }

  /**
   * Getter for <code>Schema.VAT.PERCENT</code>.
   */
  public Double getPercent() {
    return (Double) get(1);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<String> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Record2 type implementation
  // -------------------------------------------------------------------------

  @Override
  public Row2<String, Double> fieldsRow() {
    return (Row2) super.fieldsRow();
  }

  @Override
  public Row2<String, Double> valuesRow() {
    return (Row2) super.valuesRow();
  }

  @Override
  public Field<String> field1() {
    return Vat.VAT.VAT_ID;
  }

  @Override
  public Field<Double> field2() {
    return Vat.VAT.PERCENT;
  }

  @Override
  public String component1() {
    return getVatId();
  }

  @Override
  public Double component2() {
    return getPercent();
  }

  @Override
  public String value1() {
    return getVatId();
  }

  @Override
  public Double value2() {
    return getPercent();
  }

  @Override
  public VatRecord value1(String value) {
    setVatId(value);
    return this;
  }

  @Override
  public VatRecord value2(Double value) {
    setPercent(value);
    return this;
  }

  @Override
  public VatRecord values(String value1, Double value2) {
    value1(value1);
    value2(value2);
    return this;
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached VatRecord
   */
  public VatRecord() {
    super(Vat.VAT);
  }

  /**
   * Create a detached, initialised VatRecord
   */
  public VatRecord(String vatId, Double percent) {
    super(Vat.VAT);

    setVatId(vatId);
    setPercent(percent);
  }
}
